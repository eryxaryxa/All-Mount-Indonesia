-- This script was generated using the MoonVeil Obfuscator v1.4.3 [https://moonveil.cc]
local wg,ci,Td,Kd,Qf,yf=pairs,getmetatable,type,bit32.bxor;local _d,of,eb,ta,ig,Wb,C,pg,Lb,Rd,wa,Pi,Ed,mf,Wg,Md,Vc,Rf,X,Nh,xf,bc,Lc,kf,Ld,Bi,Tg,Bf,db,Zh,Ag,lf,Di,tg Di=(select);Bi=(function(...)return{[1]={...},[2]=Di('#',...)}end);Md=((function()local function Ig(yc,wb,Hg)if wb>Hg then return end return yc[wb],Ig(yc,wb+1,Hg)end return Ig end)());kf,bc=(string.gsub),(string.char);Ld=(function(ra)ra=kf(ra,'[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=]','')return(ra:gsub('.',function(cf)if(cf=='=')then return''end local J,me='',(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'):find(cf)-1)for Je=6,1,-1 do J=J..(me%2^Je-me%2^(Je-1)>0 and'1'or'0')end return J;end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(Ke)if(#Ke~=8)then return''end local ah=0 for y=1,8 do ah=ah+(Ke:sub(y,y)=='1'and 2^(8-y)or 0)end return bc(ah)end))end);_d,Nh,Lc,Wb,of,C,db,Bf=string.unpack,string.sub,string.byte,bit32 .lshift,bit32 .rshift,bit32 .band,table.concat,{};Lb=(function(Qc)local ud=Bf[Qc]if ud then return ud end local Rc,Nd,Mg,Bb,ng=Wb(1,12),Wb(1,4),1,{},''while Mg<=#Qc do local Cd=Lc(Qc,Mg)Mg=Mg+1 for _a=243,(8)+242 do local vi=nil if not(C(Cd,1)~=0)then if not(Mg+1<=#Qc)then else local Xc=_d('>I2',Qc,Mg)Mg=Mg+2 local Uh,qf=#ng-of(Xc,4),C(Xc,(Nd-1))+3 vi=Nh(ng,Uh,Uh+qf-1)end else if not(Mg<=#Qc)then else vi=Nh(Qc,Mg,Mg)Mg=Mg+1 end end Cd=of(Cd,1)if not(vi)then else Bb[#Bb+1]=vi ng=Nh(ng..vi,-Rc)end end end local pa=db(Bb)Bf[Qc]=pa return pa end);xf=(function()local t_,ue,Pg,kd,te,Ab,Sb,Lg,Gf,Na,Gd,pd=bit32 .bxor,bit32 .band,bit32 .bor,bit32 .lshift,bit32 .rshift,string.sub,string.pack,string.unpack,string.rep,table.pack,table.unpack,table.insert local function eh(Ze,Kb,o_,dd,Xd)local ub,rg,id,th_=Ze[Kb],Ze[o_],Ze[dd],Ze[Xd]local gi ub=ue(ub+rg,4294967295)gi=t_(th_,ub);th_=ue(Pg(kd(gi,16),te(gi,16)),4294967295)id=ue(id+th_,4294967295)gi=t_(rg,id);rg=ue(Pg(kd(gi,12),te(gi,20)),4294967295)ub=ue(ub+rg,4294967295)gi=t_(th_,ub);th_=ue(Pg(kd(gi,8),te(gi,24)),4294967295)id=ue(id+th_,4294967295)gi=t_(rg,id);rg=ue(Pg(kd(gi,7),te(gi,25)),4294967295)Ze[Kb],Ze[o_],Ze[dd],Ze[Xd]=ub,rg,id,th_ return Ze end local Le,ca={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}local Jh=function(s_,Ni,Ia)local Pf,Ei=Le,ca Pf[1],Pf[2],Pf[3],Pf[4]=1706303809,562067700,67619392,3773551554 for ti=200,(8)+199 do Pf[(ti-199)+4]=s_[(ti-199)]end Pf[13]=Ni for zb=244,(3)+243 do Pf[(zb-243)+13]=Ia[(zb-243)]end for ha=40,(16)+39 do Ei[(ha-39)]=Pf[(ha-39)]end for Ud=213,(10)+212 do eh(Ei,1,5,9,13);eh(Ei,2,6,10,14);eh(Ei,3,7,11,15);eh(Ei,4,8,12,16);eh(Ei,1,6,11,16);eh(Ei,2,7,12,13);eh(Ei,3,8,9,14);eh(Ei,4,5,10,15)end for Kf=83,(16)+82 do Pf[(Kf-82)]=ue(Pf[(Kf-82)]+Ei[(Kf-82)],4294967295)end return Pf end local function Pc(oa,u_,pb,Fh,Ac)local Ra=#Fh-Ac+1 if not(Ra<64)then else local Q=Ab(Fh,Ac)Fh=Q..Gf('\0',64-Ra)Ac=1 end;assert(#Fh>=64)local rb,He=Na(Lg('<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4',Fh,Ac)),Jh(oa,u_,pb)for wd=116,(16)+115 do rb[(wd-115)]=t_(rb[(wd-115)],He[(wd-115)])end local ji=Sb('<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4',Gd(rb))if Ra<64 then ji=Ab(ji,1,Ra)end return ji end local function bf(rf)local w_=''for Gb=65,(#rf)+64 do w_=w_..rf[(Gb-64)]end return w_ end local function wh_(de,vg,fb,_f)local Ui,Zd,_c,qg=Na(Lg('<I4I4I4I4I4I4I4I4',de)),Na(Lg('<I4I4I4',fb)),{},1 while qg<=#_f do pd(_c,Pc(Ui,vg,Zd,_f,qg))qg=qg+64 vg=vg+1 end return bf(_c)end return function(ui,b_,Nc)return wh_(Nc,0,b_,ui)end end)();Vc=(function()local mi,kc,W,Ec,sh,rh,ye,Eh,ga,if_,jc=bit32 .bnot,bit32 .bxor,bit32 .rshift,bit32 .lshift,bit32 .band,bit32 .bor,table.insert,table.unpack,string.rep,string.char,string.byte local function Qi(Mh,kb)local zf,nb=W(Mh,kb),Ec(Mh,32-kb)return sh(rh(zf,nb),4294967295)end local xb=function(he)local Xb={1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298}local function ee(Sf)local Cg=#Sf local mc=Cg*8 Sf=Sf..'\128'local Fg=64-((Cg+9)%64)if Fg~=64 then Sf=Sf..ga('\0',Fg)end Sf=Sf..if_(sh(W(mc,56),255),sh(W(mc,48),255),sh(W(mc,40),255),sh(W(mc,32),255),sh(W(mc,24),255),sh(W(mc,16),255),sh(W(mc,8),255),sh(mc,255))return Sf end local function yb(da)local Lf={}for tc=154,(#da)+153,64 do ye(Lf,da:sub((tc-153),(tc-153)+63))end return Lf end local function qh(G,Ci)local jh={}for fi=98,(64)+97 do if(fi-97)<=16 then jh[(fi-97)]=rh(Ec(jc(G,((fi-97)-1)*4+1),24),Ec(jc(G,((fi-97)-1)*4+2),16),Ec(jc(G,((fi-97)-1)*4+3),8),jc(G,((fi-97)-1)*4+4))else local Hf,Ee=kc(Qi(jh[(fi-97)-15],7),Qi(jh[(fi-97)-15],18),W(jh[(fi-97)-15],3)),kc(Qi(jh[(fi-97)-2],17),Qi(jh[(fi-97)-2],19),W(jh[(fi-97)-2],10))jh[(fi-97)]=sh(jh[(fi-97)-16]+Hf+jh[(fi-97)-7]+Ee,4294967295)end end local k,ke,oc,Mf,Rh,Wd,hb,je=Eh(Ci)for Tf=229,(64)+228 do local sg,l_=kc(Qi(Rh,6),Qi(Rh,11),Qi(Rh,25)),kc(sh(Rh,Wd),sh(mi(Rh),hb))local Ad,Y,xi=sh(je+sg+l_+Xb[(Tf-228)]+jh[(Tf-228)],4294967295),kc(Qi(k,2),Qi(k,13),Qi(k,22)),kc(sh(k,ke),sh(k,oc),sh(ke,oc))local lh=sh(Y+xi,4294967295)je=hb hb=Wd Wd=Rh Rh=sh(Mf+Ad,4294967295)Mf=oc oc=ke ke=k k=sh(Ad+lh,4294967295)end return sh(Ci[1]+k,4294967295),sh(Ci[2]+ke,4294967295),sh(Ci[3]+oc,4294967295),sh(Ci[4]+Mf,4294967295),sh(Ci[5]+Rh,4294967295),sh(Ci[6]+Wd,4294967295),sh(Ci[7]+hb,4294967295),sh(Ci[8]+je,4294967295)end he=ee(he)local Cf,xc,wc=yb(he),{1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225},''for Vf,kg in ipairs(Cf)do xc={qh(kg,xc)}end for Qe,Cb in ipairs(xc)do wc=wc..if_(sh(W(Cb,24),255))wc=wc..if_(sh(W(Cb,16),255))wc=wc..if_(sh(W(Cb,8),255))wc=wc..if_(sh(Cb,255))end return wc end return xb end)();local dg,Yc,xe,cb,S,Vh,md,ka,Ja,Ch,_g,Va,Mc,bg,Ri,Xe,rc,wf,Sc,zg,li,Rg,be,qe,Af,Eb,Re,Ba,ld=type,pcall,error,tonumber,assert,select,setmetatable,string.format,string.unpack,string.sub,string.byte,string.char,table.move,table.pack,table.create,table.insert,table.concat,coroutine.create,coroutine.yield,coroutine.resume,coroutine.close,bit32 .bor,bit32 .bxor,bit32 .band,bit32 .btest,bit32 .rshift,bit32 .lshift,bit32 .extract,{[22546]={},[44084]={{6,8,true},{7,8,false},{6,8,false},{10,10,true},{3,3,true},{10,8,false},{6,3,true},{2,4,true},{10,8,false},{6,4,false},{10,0,false},{7,0,true},{2,5,false},{7,10,true},{2,5,false},{6,1,true},{3,2,true},{7,10,false},{5,10,true},{5,3,true},{10,8,false},{10,3,false},{10,10,false},{10,10,true},{7,1,false},{6,4,false},{7,7,true},{7,2,true},{10,9,false},{2,3,false},{10,0,true},{10,3,false},{7,8,false},{5,10,true},{6,8,false},{7,8,true},{2,1,false},{10,8,false},{7,8,false},{5,8,false},{6,10,true},{3,4,true},{6,8,false},{7,8,true},{2,4,false},{10,3,true},{2,0,false},{2,10,false},{7,2,false},{2,3,true},{3,4,false},{10,0,false},{5,5,true},{2,7,false},{7,8,true},{10,8,false},{10,8,false},{10,3,false},{6,10,false},{10,9,false},{3,1,false},{10,1,false},{6,10,true},{6,0,true},{3,2,true},{5,0,true},{10,9,false},{10,8,false},{10,8,false},{7,5,true},{10,7,true},{10,8,false},{6,8,false},{7,8,false},{2,4,true},{6,1,true},{6,1,true},{7,0,true},{10,8,false},{6,3,false},{10,8,false},{3,5,true},{2,2,false},{10,5,false},{7,8,true},{10,8,false},{10,1,false},{7,8,false},{7,2,false},{7,8,true},{2,10,true},{5,3,false},{7,5,false},{6,4,true},{3,2,true},{2,5,true},{5,0,true},{10,3,false},{7,8,false},{7,8,false},{10,8,true},{10,8,false},{10,8,false},{5,0,false},{5,4,false},{10,8,true},{3,10,false},{10,8,true},{7,0,false},{7,8,true},{10,8,false},{3,1,true},{2,1,false},{3,2,false},{10,8,false},{6,1,false},{3,2,false},{10,2,true},{6,4,false},{10,2,true},{5,2,false},{5,3,false},{10,2,true},{10,8,false},{3,5,false},{3,7,true},{6,2,true},{10,8,false},{10,8,false},{6,1,false},{10,3,false},{5,7,false},{3,5,false},{10,2,true},{6,8,false},{10,2,true},{10,1,false},{10,1,true},{10,8,false},{2,7,true},{3,8,false},{10,8,false},{6,1,false},{7,2,true},{7,5,true},{7,0,true},{10,7,true},{3,0,true},{10,8,false},{7,1,true},{10,7,false},{3,4,false},{7,2,true},{3,5,true},{3,3,true},{10,2,true},{2,0,false},{2,3,true},{3,2,false},{2,4,false},{2,0,true},{7,8,false},{3,5,true},{10,3,false},{5,8,true},{3,7,true},{10,1,true},{6,3,true},{10,1,false},{7,10,true},{7,10,true},{10,3,false},{5,5,true},{7,10,false},{10,9,false},{10,2,true},{10,3,false},{3,5,true},{7,8,true},{10,7,false},{6,10,true},{3,4,true},{10,8,false},{2,4,false},{3,5,true},{6,2,false},{10,2,false},{6,5,false},{2,10,false},{7,3,true},{7,1,true},{6,1,false},{10,8,false},{7,4,false},{10,8,false},{7,8,false},{7,8,false},{10,1,true},{10,0,true},{2,5,true},{10,8,false},{5,3,false},{2,5,true},{7,4,false},{5,3,false},{5,8,true},{10,9,false},{5,8,false},{7,10,false},{7,3,false},{3,10,true},{6,4,false},{7,1,false},{10,2,true},{10,8,true},{6,1,false},{7,7,true},{10,10,true},{10,1,true},{5,5,false},{3,5,true},{10,10,false},{10,8,false},{7,8,false},{3,3,false},{6,3,false},{5,10,false},{7,1,false},{6,5,true},{5,6,false},{3,2,true},{10,8,false},{5,8,true},{10,8,false},{3,7,false},{5,0,true},{6,0,true},{7,8,true},{10,4,false},{3,1,false},{2,1,true},{3,1,false},{10,1,false},{10,8,false},{7,4,false},{10,8,false},{7,5,true},{5,7,true},{5,8,true},{6,10,false},{7,4,false},{10,8,false},{7,8,true},{7,8,true},{6,8,false},{3,1,true}},[33043]={}}local function pc(Of)local x=ld[22546][Of]if not(x)then else return x end local nh,Hb=Of,1 local function Xf()local ae,pi,ei,Kh,_h,Ih,ia,di,_i,Ge,P,Fe,Gg,Yb,zh,uf,M,Qd,Ae,ea,Z,Oh,ve,Hh,Ii,df,ib,fh,ni_,L Oh,Hh={},function(N,Zf,nd)Oh[N]=Kd(Zf,56503)-Kd(nd,40809)return Oh[N]end ve=Oh[26819]or Hh(26819,115708,25690)repeat while true do if ve>32745 then if ve<=49282 then if ve<=41119 then if ve>36977 then if ve<=39108 then if ve<=38196 then if ve<=37791 then if ve>37549 then ve=Oh[5550]or Hh(5550,95596,20434)break else Qd=if fh<8388608 then fh else fh-16777216 ve=Oh[-21345]or Hh(-21345,83214,16301)break end else uf=false ve=Oh[-2470]or Hh(-2470,131068,5397)end elseif ve<=38606 then ni_=P;Kh=Rg(Kh,Re(qe(ni_,127),(L-197)*7))if not(not Af(ni_,128))then ve=Oh[10371]or Hh(10371,87117,19396)break else ve=Oh[-9366]or Hh(-9366,95081,10755)break end ve=Oh[-15675]or Hh(-15675,120382,51541)else Ae=Ae+di;df=Ae;if Ae~=Ae then ve=Oh[-17090]or Hh(-17090,8671,27327)else ve=Oh[9858]or Hh(9858,123396,3)end end elseif ve<=39948 then if ve<=39496 then ea=ea+ib;ia=ea;if ea~=ea then ve=Oh[5492]or Hh(5492,96253,31637)else ve=47203 end elseif ve>39873 then pi[484]=L[pi[6283]+1]ve=Oh[32418]or Hh(32418,88903,28846)else Ge=be(Qd,1478467631)ve=Oh[-10720]or Hh(-10720,25190,53082)break end elseif ve>40625 then if(di>=0 and Ae>Kh)or((di<0 or di~=di)and Ae<Kh)then ve=1938 else ve=45087 end else if true then ve=Oh[8572]or Hh(8572,15872,36925)else ve=Oh[19237]or Hh(19237,22052,5442)end end elseif ve>34574 then if ve<=35801 then Z=Z+ea;ei=Z;if Z~=Z then ve=Oh[23892]or Hh(23892,47551,34205)else ve=Oh[14426]or Hh(14426,127851,13868)end elseif ve<=35907 then di,Ae,Kh=1,52,(Fe)+51 ve=54075 else if not(uf)then ve=Oh[13955]or Hh(13955,29253,62865)break else ve=Oh[10632]or Hh(10632,130032,3361)break end ve=Oh[26655]or Hh(26655,127998,2323)end elseif ve>33816 then if ve<=34241 then if ve<=34057 then ib[(df-85)]=ia()ve=Oh[4738]or Hh(4738,122439,7212)else if true then ve=38260 else ve=61532 end end else if(ea>=0 and Z>uf)or((ea<0 or ea~=ea)and Z<uf)then ve=Oh[-6220]or Hh(-6220,20587,56737)else ve=Oh[-7085]or Hh(-7085,128919,63776)end end elseif ve>33461 then Yb,Gg=Ih,nil;ve=1721;else pi[484]=L[pi[61316]+1]ve=Oh[-26710]or Hh(-26710,9282,65445)end elseif ve>45535 then if ve>47464 then if ve>48579 then if ve<=48917 then return{[1795]=ae,[3775]=Yb,[12371]=di,[64256]=Z,[33810]='',[50334]=Ii}else _h[43096]=qe(Eb(df,8),255)_h[7754]=qe(Eb(df,16),255)_h[61316]=qe(Eb(df,24),255)ve=Oh[-7389]or Hh(-7389,126096,28952)end else di=be(df,111)ve=1616 break end elseif ve<=46587 then if ve<=46174 then if ve<=46011 then pi[484]=L[Ba(pi[19639],0,24)+1]pi[28499]=Ba(pi[19639],31,1)==1 ve=Oh[21773]or Hh(21773,15892,54547)else di=di+pi;L=di;if di~=di then ve=Oh[14311]or Hh(14311,130479,22100)else ve=20256 end end else ib=ib+Ae;Kh=ib;if ib~=ib then ve=Oh[-4393]or Hh(-4393,102183,58649)else ve=Oh[-14939]or Hh(-14939,91852,21928)end end elseif ve<=47256 then if(ib>=0 and ea>ei)or((ib<0 or ib~=ib)and ea<ei)then ve=50766 else ve=35972 end else Kh=ib;if ia~=ia then ve=Oh[-16404]or Hh(-16404,9405,33155)else ve=61370 end end elseif ve<=43751 then if ve<=42794 then if true then ve=13375 else ve=1721 end elseif ve<=43209 then if ve<=42982 then if ve<=42846 then if true then ve=Oh[27307]or Hh(27307,106438,30126)else ve=958 end else Ii,Ih=zh,nil;ve=Oh[-15630]or Hh(-15630,7070,23580);end else zh=be(Ii,111)ve=Oh[-21879]or Hh(-21879,106459,878)break end elseif ve>43442 then Ae=_i ve=8048 break else df=Ja('B',nh,Hb);Hb=Hb+1 ve=Oh[18368]or Hh(18368,7518,39265)end elseif ve>44663 then if ve<=45290 then pi,L=Z[(df-51)],ib;P=pi[51846];if P==2 then ve=Oh[3332]or Hh(3332,2804,14977)break elseif P==6 then ve=Oh[-8060]or Hh(-8060,3278,43998)break elseif not(P==7)then ve=Oh[-3256]or Hh(-3256,4756,11349)break else ve=Oh[-9402]or Hh(-9402,109747,28930)break end ve=Oh[-31214]or Hh(-31214,98670,23257)else ia=ea;if ei~=ei then ve=50766 else ve=47203 end end elseif ve>43883 then pi[484]=L[pi[7754]+1]ve=Oh[31188]or Hh(31188,16658,39445)else di=nil;ve=Oh[32220]or Hh(32220,125758,4361);end elseif ve>57393 then if ve<=61930 then if ve>60003 then if ve>61451 then ni_=Ja('B',nh,Hb);Hb=Hb+1 ve=Oh[4229]or Hh(4229,116530,19327)elseif ve>61391 then ia=ib;Fe=Rg(Fe,Re(qe(ia,127),(ei-68)*7))if not Af(ia,128)then ve=Oh[11249]or Hh(11249,23803,47018)break end ve=Oh[32417]or Hh(32417,16960,36000)else if(Ae>=0 and ib>ia)or((Ae<0 or Ae~=Ae)and ib<ia)then ve=Oh[-17068]or Hh(-17068,94645,19595)else ve=43832 end end else df=Ja('<I4',nh,Hb);Hb=Hb+4 ve=Oh[15397]or Hh(15397,89086,4602)end elseif ve>64528 then if ve>65020 then if ve>65340 then P=nil;ve=61532;else fh=Ge;ve=37439;end else pi[484]=L[pi[43096]+1]ve=Oh[-13620]or Hh(-13620,25311,47446)end elseif ve<=63893 then if ve<=63701 then di=be(df,1478467631)ve=50706 break else _h[6283]=Qd ve=Oh[3390]or Hh(3390,9804,9772)end else ve=Oh[27097]or Hh(27097,29285,51614)break end elseif ve<=53395 then if ve>50082 then if ve>50496 then if ve<=50736 then df=di;pi=qe(df,255);L=ld[44084][pi+1];P,ni_,_i=L[1],L[2],L[3];_h={[35284]=0,[28499]=0,[23013]=nil,[28580]=0,[7754]=0,[30185]=0,[6283]=0,[484]=0,[51846]=ni_,[47114]=0,[19639]=0,[43096]=0,[22086]=pi,[61316]=0,[14430]=0};Xe(Kh,_h)if P==5 then ve=Oh[-3233]or Hh(-3233,119528,10009)break elseif P==10 then ve=Oh[-28801]or Hh(-28801,128950,62514)break elseif not(P==7)then ve=Oh[-15826]or Hh(-15826,37126,38034)break else ve=Oh[6573]or Hh(6573,122601,21086)break end ve=Oh[-32016]or Hh(-32016,30699,63183)else ea=nil;ve=958;end elseif ve<=50309 then ib=be(ia,111)ve=61412 break else ib=nil;ve=57388;end elseif ve<=49425 then Ih=be(Yb,111)ve=Oh[-26875]or Hh(-26875,116484,2184)break else if true then ve=63733 else ve=65293 end end elseif ve>55497 then if ve>56487 then if ve>57389 then Kh,di=Z,nil;ve=58474;else ia=Ja('B',nh,Hb);Hb=Hb+1 ve=50227 end else ea=be(ei,-1648640861)ve=Oh[-3020]or Hh(-3020,13969,3605)break end elseif ve<=54502 then if ve<=53859 then Qd=if fh<32768 then fh else fh-65536 ve=Oh[26023]or Hh(26023,43368,49737)break elseif ve>54095 then ae,zh=M,nil;ve=Oh[-26350]or Hh(-26350,18262,3333);else df=Ae;if Kh~=Kh then ve=Oh[23134]or Hh(23134,23360,7948)else ve=40777 end end else L=di;if df~=df then ve=Oh[-8309]or Hh(-8309,43098,33403)else ve=Oh[-1370]or Hh(-1370,17096,53302)end end elseif ve<=16393 then if ve>8106 then if ve<=12616 then if ve<=10751 then if ve<=9182 then Kh=0;pi,df,di=1,(4)+197,197 ve=Oh[-18944]or Hh(-18944,10176,48228)else M=nil;ve=Oh[21197]or Hh(21197,49396,33970);end else pi[484]=L[pi[19639]+1]ve=Oh[24073]or Hh(24073,100013,24216)end elseif ve<=14572 then if ve<=13790 then if ve>13321 then if ve<=13491 then Fe=Gg;Z,uf=Ri(Fe),false;ib,ea,ei=1,40,(Fe)+39 ve=45494 else _h[43096]=qe(Eb(df,8),255)Ge=qe(Eb(df,16),65535)_h[35284]=Ge Qd=nil ve=Oh[-13109]or Hh(-13109,21130,56111)end else Qd=Ja('<I4',nh,Hb);Hb=Hb+4 ve=39873 end else if true then ve=Oh[-27970]or Hh(-27970,43677,51667)else ve=Oh[-3157]or Hh(-3157,100955,59860)end end elseif ve<=16077 then if true then ve=50706 else ve=58474 end else ei=Z;if uf~=uf then ve=Oh[-15681]or Hh(-15681,125822,29404)else ve=Oh[9144]or Hh(9144,117919,5880)end end elseif ve<=4076 then if ve<=2032 then if ve<=1021 then if ve<=531 then if ve<=298 then ae=Ja('B',nh,Hb);Hb=Hb+1 ve=Oh[-8859]or Hh(-8859,22853,60567)else if true then ve=1616 else ve=43305 end end elseif ve>953 then ei=0;Ae,ia,ib=1,(4)+217,217 ve=47309 else Yb=Ja('B',nh,Hb);Hb=Hb+1 ve=Oh[21228]or Hh(21228,122977,58550)end elseif ve<=1680 then if ve>1519 then df=di;ei=Rg(ei,Re(qe(df,127),(Kh-217)*7))if not Af(df,128)then ve=Oh[-11915]or Hh(-11915,114055,20861)break end ve=Oh[22835]or Hh(22835,3647,33692)else if true then ve=61412 else ve=57388 end end elseif ve>1829 then Ae=nil;ve=9124;else Fe=0;Z,ea,uf=68,1,(4)+68 ve=16109 end elseif ve>3190 then pi[484]=Ba(pi[19639],0,16)ve=Oh[-22044]or Hh(-22044,117289,57628)else Ii=Ja('B',nh,Hb);Hb=Hb+1 ve=43125 end elseif ve>6322 then if ve>7191 then if ve<=7776 then if true then ve=42853 else ve=Oh[4477]or Hh(4477,3203,22998)end elseif ve>7919 then uf=Ae ve=Oh[28348]or Hh(28348,26943,33744)else P=df;if pi~=pi then ve=Oh[-8890]or Hh(-8890,93122,26520)else ve=Oh[21620]or Hh(21620,30589,45665)end end elseif ve>6717 then if ve>6993 then ni_=pi[19639];_i,_h=Eb(ni_,30),qe(Eb(ni_,20),1023);pi[484]=L[_h+1]pi[47114]=_i if not(_i==2)then ve=Oh[-30292]or Hh(-30292,115939,12589)break else ve=Oh[-17708]or Hh(-17708,49301,39043)break end ve=Oh[27380]or Hh(27380,5664,44295)elseif ve<=6907 then if P==5 then ve=Oh[280]or Hh(280,118908,28281)break elseif P==1 then ve=Oh[26311]or Hh(26311,88006,18222)break elseif P==10 then ve=Oh[18520]or Hh(18520,28485,15123)break elseif P==9 then ve=Oh[24176]or Hh(24176,70787,21711)break elseif P==4 then ve=Oh[-11176]or Hh(-11176,44912,38067)break elseif not(P==3)then ve=Oh[10281]or Hh(10281,16056,54927)break else ve=Oh[32350]or Hh(32350,110156,22580)break end ve=Oh[10829]or Hh(10829,126823,1230)else Kh=Ae;di=Ri(Kh);df,pi,L=40,(Kh)+39,1 ve=7790 end else _h[14430]=Qd ve=Oh[21137]or Hh(21137,116531,18087)end elseif ve<=4886 then M=be(ae,111)ve=Oh[-8016]or Hh(-8016,93371,17344)break elseif ve<=5055 then di[(P-39)]=Xf()ve=Oh[-9181]or Hh(-9181,12790,58993)else Ge=qe(Eb(ni_,10),1023);pi[30185]=L[Ge+1]ve=Oh[11123]or Hh(11123,119072,59911)end elseif ve>24752 then if ve>29644 then if ve>31210 then if ve<=32566 then if(L>=0 and df>pi)or((L<0 or L~=L)and df<pi)then ve=Oh[-20075]or Hh(-20075,113766,15652)else ve=4935 end else Ae=Ae+di;df=Ae;if Ae~=Ae then ve=35842 else ve=28014 end end else df=df+L;P=df;if df~=df then ve=48772 else ve=32450 end end elseif ve>28114 then if ve>28970 then if ve>29476 then if true then ve=33746 else ve=948 end else Ge=nil;ve=13035;end else Qd=Ge;_h[19639]=Qd;Xe(Kh,{})ve=Oh[30978]or Hh(30978,12766,56388)end elseif ve>27309 then if ve<=27752 then if true then ve=6928 else ve=9124 end else if(di>=0 and Ae>Kh)or((di<0 or di~=di)and Ae<Kh)then ve=Oh[-18133]or Hh(-18133,116831,6031)else ve=34028 end end elseif ve>26878 then if ve>27015 then if _i==3 then ve=Oh[-5767]or Hh(-5767,11324,6375)break end ve=Oh[16560]or Hh(16560,86015,25718)else df=Ae;if Kh~=Kh then ve=35842 else ve=28014 end end elseif ve>26741 then Ge,Qd=qe(Eb(ni_,10),1023),qe(Eb(ni_,0),1023);pi[30185]=L[Ge+1]pi[28580]=L[Qd+1]ve=Oh[25581]or Hh(25581,3726,42361)else pi[484]=L[pi[14430]+1]ve=Oh[-4462]or Hh(-4462,99153,22740)end elseif ve<=19760 then if ve<=17893 then if ve>17112 then Ae=nil;ve=Oh[8584]or Hh(8584,103359,61872);else if _i then ve=Oh[-31693]or Hh(-31693,12173,8128)break end ve=Oh[16750]or Hh(16750,124424,4074)end elseif ve<=18625 then P=be(ni_,111)ve=Oh[-4915]or Hh(-4915,130187,5537)break elseif ve<=18949 then fh=Ge;ve=Oh[-8855]or Hh(-8855,10609,47882);else Gg=be(Fe,-1648640861)ve=Oh[31852]or Hh(31852,44092,41765)break end elseif ve>21477 then if ve>22348 then if ve<=22553 then if ve<=22450 then ve=Oh[26837]or Hh(26837,13177,15059)break else Ae=be(Kh,-1648640861)ve=6928 break end elseif ve>22668 then ei=ea;ib=Ri(ei);ia=function()local Ah,R,Gi,Id,Za,wi,Wa,pe,la,tf,V,gg,Ma,hg,Zc Zc,la={},function(Bc,n_,B)Zc[Bc]=Kd(n_,18952)-Kd(B,34821)return Zc[Bc]end Id=Zc[-15408]or la(-15408,34082,50375)repeat while true do if Id>34620 then if Id>50275 then if Id<=57861 then if Id<=53174 then if Id>51648 then if Id>52141 then gg=Za;hg=Ja('c'..gg,nh,Hb);Hb=Hb+gg Id=9051 else Wa=nil;Id=Zc[12457]or la(12457,61892,38669);end elseif Id<=51093 then if Id>50905 then Gi=Ah Id=Zc[11698]or la(11698,13208,60837)else if true then Id=50950 else Id=Zc[4900]or la(4900,43476,20280)end end else Ah=Bi(wi)Id=59685 break end elseif Id>55002 then wi=nil;Id=Zc[-1621]or la(-1621,41490,37696);else R=nil;Id=64862;end elseif Id<=61365 then if Id<=58776 then if Id<=58165 then if Id>57870 then if(hg>=0 and wi>gg)or((hg<0 or hg~=hg)and wi<gg)then Id=Zc[-27797]or la(-27797,11981,56239)else Id=Zc[364]or la(364,101193,22320)end else Ma=nil;Id=Zc[-13826]or la(-13826,124984,22028);end else Ma=be(V,111)Id=Zc[13521]or la(13521,79648,29315)break end elseif Id>59506 then Gi=Md(Ah[1],1,Ah[2])Id=Zc[20307]or la(20307,51082,61847)else if pe==5 then Id=Zc[-23875]or la(-23875,84395,54456)break elseif pe==0 then Id=Zc[6370]or la(6370,55648,57141)break end Id=Zc[13946]or la(13946,50321,62124)end elseif Id>63435 then if Id>64168 then Za=0;hg,gg,wi=1,(4)+164,164 Id=Zc[-6798]or la(-6798,44028,44493)else Id=Zc[26349]or la(26349,120727,15487)break end elseif Id<=62464 then if Id>62214 then R=0;wi,gg,Za=(4)+101,1,101 Id=62009 else hg=Za;if wi~=wi then Id=Zc[22932]or la(22932,92329,42204)else Id=Zc[-5349]or la(-5349,78025,23785)end end else Ah=Bi(be(R,-1648640861))Id=Zc[-16095]or la(-16095,10164,50255)break end elseif Id>42951 then if Id>48684 then V=Ja('B',nh,Hb);Hb=Hb+1 Id=58462 elseif Id>47662 then Wa=wi;if gg~=gg then Id=Zc[17137]or la(17137,15602,60890)else Id=Zc[14912]or la(14912,46149,37944)end else if true then Id=33442 else Id=Zc[-13589]or la(-13589,93336,60012)end end elseif Id<=39207 then if Id<=37101 then Gi=nil Id=Zc[-11742]or la(-11742,26145,36924)else Id=Zc[18330]or la(18330,4202,49474)break end elseif Id<=41429 then Ma=Ja('B',nh,Hb);Hb=Hb+1 Id=Zc[29162]or la(29162,43316,5309)elseif Id>42589 then Ah=Bi(nil);Id=54516;else if(gg>=0 and Za>wi)or((gg<0 or gg~=gg)and Za<wi)then Id=Zc[21121]or la(21121,101088,17189)else Id=51846 end end elseif Id>18910 then if Id<=26441 then if Id>22148 then if Id<=23845 then if Id>23242 then if true then Id=17617 else Id=Zc[31712]or la(31712,116993,3502)end else tf=be(pe,111)Id=Zc[11482]or la(11482,70242,24281)break end elseif Id<=24778 then Id=Zc[25049]or la(25049,68507,50126)break else Ah=nil;Id=Zc[10149]or la(10149,42906,22774);end elseif Id<=19913 then if Id<=19479 then wi=wi+hg;Wa=wi;if wi~=wi then Id=Zc[-17608]or la(-17608,27484,38972)else Id=57872 end else Za=Za+gg;hg=Za;if Za~=Za then Id=Zc[24599]or la(24599,119034,11567)else Id=Zc[-2243]or la(-2243,37044,48354)end end elseif Id>20154 then if not(oh)then Id=Zc[-8467]or la(-8467,69861,6763)break else Id=Zc[-23095]or la(-23095,97812,46124)break end Id=Zc[5315]or la(5315,42731,44129)else Ah=Bi''Id=59685 break end elseif Id<=30783 then if Id<=28147 then if true then Id=Zc[15843]or la(15843,92973,6034)else Id=Zc[11406]or la(11406,14114,34597)end else pe=Ja('B',nh,Hb);Hb=Hb+1 Id=Zc[10311]or la(10311,15801,38520)end elseif Id>32696 then if Id>33304 then if Id>33413 then V=Ma;Za=Rg(Za,Re(qe(V,127),(Wa-164)*7))if not Af(V,128)then Id=Zc[-26774]or la(-26774,57766,40254)break end Id=Zc[-29308]or la(-29308,85853,12641)else tf=nil;Id=28170;end else pe=tf;if not(pe==2)then Id=Zc[8092]or la(8092,45727,61790)break else Id=Zc[-16061]or la(-16061,61343,37418)break end Id=Zc[19521]or la(19521,47458,22399)end elseif Id<=32261 then if true then Id=17735 else Id=40132 end else if pe==4 then Id=Zc[-16835]or la(-16835,11322,36126)break elseif not(pe==6)then Id=Zc[-5950]or la(-5950,125457,12380)break else Id=Zc[18382]or la(18382,6000,45989)break end Id=Zc[669]or la(669,8130,51679)end elseif Id>11215 then if Id<=15176 then if Id>12895 then if true then Id=Zc[-19147]or la(-19147,115422,6068)else Id=Zc[-15076]or la(-15076,123791,23702)end else if true then Id=20385 else Id=Zc[20524]or la(20524,100805,32509)end end elseif Id<=16734 then Ah=Bi(nil);Id=62420;elseif Id>17834 then if Id>18017 then Wa=be(Ma,111)Id=Zc[-2205]or la(-2205,96451,25985)break else if true then Id=Zc[-17108]or la(-17108,3657,43722)else Id=Zc[7240]or la(7240,130548,19501)end end elseif Id<=17676 then Za=R;if Za==0 then Id=Zc[-6391]or la(-6391,53500,50469)break else Id=Zc[18735]or la(18735,87315,52830)break end Id=Zc[-8582]or la(-8582,62708,590)else Ma=Wa;R=Rg(R,Re(qe(Ma,127),(hg-101)*7))if not(not Af(Ma,128))then Id=Zc[-926]or la(-926,61740,59107)break else Id=Zc[32721]or la(32721,86312,12967)break end Id=Zc[-1923]or la(-1923,51496,48871)end elseif Id<=6715 then if Id>5248 then Ah=R Id=50950 break elseif Id<=4741 then R=be(Za,-1648640861)Id=17617 break else return Gi end elseif Id<=8189 then R=Ja('<d',nh,Hb);Hb=Hb+8 Id=6118 elseif Id>8806 then wi=hg Id=Zc[-26995]or la(-26995,60659,57183)break elseif Id<=8613 then Gi=Md(Ah[1],1,Ah[2])Id=Zc[-7905]or la(-7905,32137,43924)else Gi={}Id=Zc[19448]or la(19448,11206,50651)end end until Id==33344 end Kh,di,Ae=(ei)+85,1,86 ve=26879 else if true then ve=Oh[-16691]or Hh(-16691,22104,33592)else ve=Oh[15737]or Hh(15737,3411,400)end end elseif ve<=22076 then Ge,Qd=qe(Eb(df,8),16777215),nil;ve=Oh[-15159]or Hh(-15159,117903,36418);else if true then ve=Oh[-3837]or Hh(-3837,10326,17227)else ve=Oh[30844]or Hh(30844,33453,35658)end end else if(pi>=0 and di>df)or((pi<0 or pi~=pi)and di<df)then ve=Oh[10971]or Hh(10971,45477,35422)else ve=65387 end end end until ve==36008 end local yh=Xf()ld[22546][Of]=yh return yh end local ch=getfenv()local function H(Yd,We)Yd=pc(Yd)local Wc=Yd local function bh(Ha,bi)local function Ff(...)return{[55606]=Vh('#',...),[25879]={...}}end local function Ye(O,Db,Bg)local Dc,Ug,Ve Ug,Dc={},function(c,Qa,fa_)Ug[c]=Kd(Qa,52003)-Kd(fa_,19790)return Ug[c]end Ve=Ug[-28716]or Dc(-28716,120481,57272)repeat while true do if Ve>35289 then if Ve<=35850 then if Db>Bg then Ve=Ug[-14827]or Dc(-14827,112550,47893)break end Ve=36233 else return O[Db],Ye(O,Db+1,Bg)end else return end end until Ve==48953 end local function j(vf,hf,Ne,gb)local jd,Fi,lg,Rb,De,dc,hc,F,vb,A,Ga,ed,uh,Oc,La,hd,ob,ab,Ie,ph,Bd,ba,Pd ab,Rb={},function(Jg,Uf,yg)ab[Jg]=Kd(Uf,18208)-Kd(yg,11083)return ab[Jg]end jd=ab[20492]or Rb(20492,65768,33686)repeat while true do if jd<=32879 then if jd<=16468 then if jd>8296 then if jd>12398 then if jd<=14421 then if jd>13430 then if jd>14048 then if jd>14221 then if not(lg>193)then jd=ab[796]or Rb(796,75520,52331)break else jd=ab[18778]or Rb(18778,53262,29525)break end jd=ab[9483]or Rb(9483,40440,58853)elseif jd<=14090 then if jd<=14075 then Mc(gb[25879],1,Bd,F,vf)jd=ab[-3364]or Rb(-3364,59843,35314)else if not(Fi[3]>=ba[43096])then jd=ab[27714]or Rb(27714,9035,29825)break else jd=ab[8218]or Rb(8218,90273,56461)break end jd=ab[-32376]or Rb(-32376,36759,61277)end else dc[(Ie-215)]=bi[Pd[7754]+1]jd=ab[-26407]or Rb(-26407,96535,59723)end elseif jd<=13870 then if not(Fi<=Bd)then jd=ab[29077]or Rb(29077,30238,2193)break end jd=ab[10177]or Rb(10177,45107,49570)elseif jd<=14006 then if lg>199 then jd=ab[-27076]or Rb(-27076,12830,7696)break else jd=ab[-3627]or Rb(-3627,55190,32166)break end jd=ab[26866]or Rb(26866,82573,53960)else if not(lg>76)then jd=ab[-30079]or Rb(-30079,123039,56511)break else jd=ab[9862]or Rb(9862,51961,43397)break end jd=ab[14890]or Rb(14890,43681,51740)end elseif jd>12662 then hc+=1 jd=ab[-30086]or Rb(-30086,45116,49593)else return Ye(vf,F,F+A-1)end elseif jd<=15574 then if jd<=15139 then if jd>14907 then A=nil;jd=2477;elseif jd>14824 then vf[ba[43096]]=-vf[ba[7754]]jd=ab[21863]or Rb(21863,36714,38763)elseif jd<=14793 then if not(lg>194)then jd=ab[-21084]or Rb(-21084,43455,40241)break else jd=ab[12740]or Rb(12740,7266,13673)break end jd=ab[-22589]or Rb(-22589,5605,28112)else F=dg(Bd)=='function'jd=28099 break end elseif jd<=15344 then xe''jd=ab[9497]or Rb(9497,76991,57122)elseif jd>15435 then hc+=1 jd=ab[-14747]or Rb(-14747,35370,60331)else hc-=1 Ne[hc]={[22086]=101,[43096]=be(ba[43096],68),[7754]=be(ba[7754],213),[61316]=0}jd=ab[465]or Rb(465,45784,49797)end elseif jd<=16001 then if lg>195 then jd=ab[-3974]or Rb(-3974,6888,6021)break else jd=ab[-19447]or Rb(-19447,67840,17285)break end jd=ab[-26677]or Rb(-26677,36369,38476)elseif jd>16192 then if jd<=16282 then Bd,dc,A=F.__iter(Bd)jd=ab[-23534]or Rb(-23534,79163,55205)else if not(lg>204)then jd=ab[26402]or Rb(26402,48182,6990)break else jd=ab[-5819]or Rb(-5819,71428,59117)break end jd=ab[-3700]or Rb(-3700,39893,64384)end elseif jd<=16087 then hc+=ba[14430]jd=ab[14257]or Rb(14257,47494,55607)else vf[ba[61316]]=vf[ba[43096]]-vf[ba[7754]]jd=ab[11600]or Rb(11600,11756,30185)end elseif jd<=10404 then if jd>9316 then if jd<=9770 then if jd<=9554 then if jd<=9355 then if lg>86 then jd=ab[5125]or Rb(5125,96775,27558)break else jd=ab[-19445]or Rb(-19445,64991,28587)break end jd=ab[6149]or Rb(6149,22958,14639)else if not(lg>31)then jd=ab[-8443]or Rb(-8443,43338,29266)break else jd=ab[-28800]or Rb(-28800,60579,18977)break end jd=ab[23940]or Rb(23940,476,4505)end else if true then jd=47734 else jd=2477 end end else Bd=gb[55606]ob=F+Bd-1 jd=ab[-29609]or Rb(-29609,3446,14379)end elseif jd>8878 then Fi,Ie=Bd[28580],ba[28580];Ie='\154\17jCJ'..Ie Pd=''Oc,La,vb=(#Fi-1)+55,1,55 jd=36008 elseif jd>8602 then if not vf[ba[43096]]then jd=ab[-27707]or Rb(-27707,2661,13966)break end jd=ab[18534]or Rb(18534,33578,40107)else F=nil;jd=53398;end elseif jd>11491 then if jd>11934 then if jd<=12263 then if jd<=12189 then hc+=ba[14430]jd=ab[14683]or Rb(14683,11780,30641)else Fi[1]=Fi[2][Fi[3]]Fi[2]=Fi Fi[3]=1 Ga[ph]=nil jd=ab[11048]or Rb(11048,48182,56638)end else Ie=dc-1 jd=ab[-6511]or Rb(-6511,78433,61119)end elseif jd>11621 then if jd>11683 then hc+=ba[14430]jd=ab[31472]or Rb(31472,58749,48504)else Bd=dg(dc)=='function'jd=ab[20262]or Rb(20262,83556,13483)break end elseif jd<=11504 then vf[ba[61316]]=ba[43096]==1 hc+=ba[7754]jd=ab[-3282]or Rb(-3282,52568,21765)else if(Pd>=0 and Fi>Ie)or((Pd<0 or Pd~=Pd)and Fi<Ie)then jd=ab[15413]or Rb(15413,48383,20009)else jd=20060 end end elseif jd>10995 then if jd>11246 then if jd>11329 then F=vf[ba[43096]];vf[ba[7754]]=if F then F else ba[484]or false jd=ab[7278]or Rb(7278,56169,47956)else xe''jd=ab[6326]or Rb(6326,108036,54861)end else Mc(vf,Bd,Bd+dc-1,ba[19639],vf[F])hc+=1 jd=ab[-24740]or Rb(-24740,47297,55548)end elseif jd>10803 then if jd>10961 then if jd>10990 then if not(lg>34)then jd=ab[-26108]or Rb(-26108,52817,20394)break else jd=ab[-31450]or Rb(-31450,41202,47632)break end jd=ab[-31035]or Rb(-31035,365,4456)else hc-=1 Ne[hc]={[22086]=56,[43096]=be(ba[43096],36),[7754]=be(ba[7754],204),[61316]=0}jd=ab[2771]or Rb(2771,39951,58446)end else hc+=1 jd=ab[-11362]or Rb(-11362,54807,44614)end else Fi=Fi+Pd;vb=Fi;if Fi~=Fi then jd=ab[-6322]or Rb(-6322,47315,55426)else jd=53194 end end elseif jd<=4106 then if jd<=2024 then if jd<=1006 then if jd>467 then if jd>661 then vf[ba[7754]]=vf[ba[43096]]+vf[ba[61316]]jd=ab[-9976]or Rb(-9976,45357,49832)else vb=vb+La;hd=vb;if vb~=vb then jd=ab[-20051]or Rb(-20051,10444,32541)else jd=ab[10700]or Rb(10700,116163,58141)end end else if not(ba[61316]==218)then jd=ab[15731]or Rb(15731,90303,62462)break else jd=ab[372]or Rb(372,125565,39625)break end jd=ab[14420]or Rb(14420,23863,9894)end elseif jd<=1480 then ph,Fi=Bd(dc,A);A=ph;if A==nil then jd=ab[3856]or Rb(3856,61899,33162)else jd=14080 end else Bd=F;vf[be(ba[43096],53)]=Bd jd=ab[-19629]or Rb(-19629,13652,19713)end elseif jd<=3144 then if jd<=2795 then if jd>2619 then if jd>2743 then F,Bd,dc=ba[7754],ba[61316],ba[43096]-1;if not(dc==-1)then jd=ab[6377]or Rb(6377,55451,24324)break else jd=ab[-10835]or Rb(-10835,59421,8857)break end jd=11116 else if not(lg>251)then jd=ab[15750]or Rb(15750,91015,16792)break else jd=ab[21249]or Rb(21249,47159,36730)break end jd=ab[17091]or Rb(17091,57570,45267)end else ph,Fi=Bd[30185],ba[30185];Fi='\154\17jCJ'..Fi Ie=''vb,Pd,Oc=(#ph-1)+104,104,1 jd=57350 end elseif jd<=2970 then if jd<=2890 then if lg>82 then jd=ab[30554]or Rb(30554,54320,17857)break else jd=ab[102]or Rb(102,125549,54529)break end jd=ab[-23753]or Rb(-23753,6090,28555)elseif jd<=2947 then F=ba[43096];Bd,dc=vf[F],vf[F+1];A=vf[F+2]+dc;vf[F+2]=A if dc>0 then jd=ab[3487]or Rb(3487,82717,8931)break else jd=ab[13124]or Rb(13124,82150,4454)break end jd=ab[-29248]or Rb(-29248,21554,11683)else Bd,dc,A=Ga;if Td(Bd)~='function'then jd=ab[28575]or Rb(28575,46660,31015)break end;jd=ab[-17842]or Rb(-17842,31376,4676);end else if true then jd=ab[-25443]or Rb(-25443,60539,30884)else jd=46397 end end elseif jd<=3540 then if jd<=3349 then if not Ie then jd=ab[-28499]or Rb(-28499,70996,65526)break end jd=ab[-2001]or Rb(-2001,95143,34511)else hc+=ba[14430]jd=ab[28438]or Rb(28438,55750,47607)end elseif jd<=3782 then if not(lg>4)then jd=ab[-30825]or Rb(-30825,93256,4485)break else jd=ab[-1728]or Rb(-1728,98471,63135)break end jd=ab[31868]or Rb(31868,8476,29017)else if not(vf[ba[43096]]==vf[ba[19639]])then jd=ab[996]or Rb(996,74297,63117)break else jd=ab[8958]or Rb(8958,35103,42218)break end jd=ab[1492]or Rb(1492,5236,27745)end elseif jd>6263 then if jd<=7283 then if jd>6826 then if jd>7001 then if jd>7054 then ph=Pd jd=ab[10469]or Rb(10469,87632,7299)break else if true then jd=ab[19412]or Rb(19412,50507,8577)else jd=ab[738]or Rb(738,72647,43914)end end else hc+=ba[14430]jd=ab[25208]or Rb(25208,52031,21694)end else F=ci(Bd)if F~=nil and F.__iter~=nil then jd=ab[-1331]or Rb(-1331,53818,32387)break elseif Td(Bd)=='table'then jd=ab[24745]or Rb(24745,106550,57257)break end jd=ab[-5265]or Rb(-5265,36775,30737)end elseif jd>7653 then if jd<=7892 then Bd=vf[ba[43096]];jd=14794;else F,Bd=ba[61316],ba[7754];dc,A=Yc(rc,vf,'',F,Bd);if not(not dc)then jd=ab[4601]or Rb(4601,63536,6474)break else jd=ab[-18109]or Rb(-18109,88067,32737)break end jd=ab[-3465]or Rb(-3465,96449,39321)end elseif jd<=7482 then if jd>7363 then if not(F==3)then jd=ab[-3361]or Rb(-3361,1640,9321)break else jd=ab[30193]or Rb(30193,119804,58144)break end jd=ab[17483]or Rb(17483,93974,56667)else if not ph then jd=ab[-30508]or Rb(-30508,64771,18942)break end jd=58405 end elseif jd<=7597 then if lg>110 then jd=ab[-62]or Rb(-62,106251,55822)break else jd=ab[8834]or Rb(8834,91197,26051)break end jd=ab[-21297]or Rb(-21297,62872,36293)else Oc={[1]=vf[Pd[7754]],[3]=1};Oc[2]=Oc dc[(Ie-215)]=Oc jd=ab[14760]or Rb(14760,96165,40709)end elseif jd>5345 then if jd<=5830 then if jd>5574 then hc-=1 Ne[hc]={[22086]=20,[43096]=be(ba[43096],10),[7754]=be(ba[7754],184),[61316]=0}jd=ab[12031]or Rb(12031,49558,20935)else if not(lg>141)then jd=ab[-16380]or Rb(-16380,71528,56780)break else jd=ab[12593]or Rb(12593,77516,49737)break end jd=ab[24175]or Rb(24175,24022,9607)end elseif jd<=6067 then A=Ie jd=ab[-29890]or Rb(-29890,77911,38474)break else if lg>231 then jd=ab[20589]or Rb(20589,67970,39727)break else jd=ab[23695]or Rb(23695,88094,31998)break end jd=ab[13714]or Rb(13714,41617,62156)end elseif jd<=4856 then if jd>4684 then A=nil;jd=22955;elseif jd>4588 then F=ci(Bd)if F~=nil and F.__iter~=nil then jd=ab[26849]or Rb(26849,115208,56677)break elseif Td(Bd)=='table'then jd=ab[6214]or Rb(6214,1506,1258)break end jd=ab[22210]or Rb(22210,32973,6824)else Pd=Pd+Oc;La=Pd;if Pd~=Pd then jd=ab[13538]or Rb(13538,39474,61154)else jd=ab[4089]or Rb(4089,120298,50283)end end elseif jd<=5030 then if jd<=4919 then Bd,dc,A=wg(Bd)jd=ab[-23269]or Rb(-23269,118615,55590)else if lg>100 then jd=ab[-910]or Rb(-910,119269,53437)break else jd=ab[-25960]or Rb(-25960,79617,22437)break end jd=ab[-26831]or Rb(-26831,8071,26422)end elseif jd>5115 then if lg>175 then jd=ab[30851]or Rb(30851,73380,53572)break else jd=ab[-5841]or Rb(-5841,91426,31122)break end jd=ab[-27775]or Rb(-27775,44067,62866)else F,Bd=ba[43096],ba[7754]-1;if not(Bd==-1)then jd=ab[7915]or Rb(7915,36826,47439)break else jd=ab[-24935]or Rb(-24935,434,13704)break end jd=ab[12870]or Rb(12870,35058,45975)end elseif jd>24840 then if jd>29128 then if jd<=31103 then if jd>30241 then if jd<=30699 then if jd>30524 then if not(A)then jd=ab[2708]or Rb(2708,71830,55846)break else jd=ab[24156]or Rb(24156,45023,28715)break end jd=ab[-12290]or Rb(-12290,39316,63937)elseif jd<=30470 then if true then jd=ab[-28106]or Rb(-28106,24396,14903)else jd=43235 end else hc+=ba[14430]jd=ab[14978]or Rb(14978,6475,30986)end elseif jd<=30904 then if true then jd=ab[5519]or Rb(5519,37301,57988)else jd=36079 end else vf[ba[7754]]=vf[ba[61316]][vf[ba[43096]]]jd=ab[-31307]or Rb(-31307,7450,25947)end elseif jd>29873 then if jd<=30082 then if jd<=30001 then if jd<=29961 then if jd>29935 then if not(F==2)then jd=ab[-25606]or Rb(-25606,24903,8904)break else jd=ab[-30084]or Rb(-30084,100069,57831)break end jd=ab[26257]or Rb(26257,10876,4221)else if lg>152 then jd=ab[17756]or Rb(17756,75160,23353)break else jd=ab[-31042]or Rb(-31042,37284,33119)break end jd=ab[32736]or Rb(32736,21704,11509)end else ph,Fi=Bd(dc,A);A=ph;if A==nil then jd=49273 else jd=29507 end end else if true then jd=55720 else jd=ab[-11446]or Rb(-11446,84749,52352)end end else vf[ba[43096]]=#vf[ba[7754]]jd=ab[-3597]or Rb(-3597,32063,1726)end elseif jd>29605 then A=Bd;jd=49454;else Fi[1]=Fi[2][Fi[3]]Fi[2]=Fi Fi[3]=1 Ga[ph]=nil jd=ab[30772]or Rb(30772,45607,21649)end elseif jd<=31926 then if jd>31476 then A=A+Fi;Ie=A;if A~=A then jd=ab[-12707]or Rb(-12707,35097,59716)else jd=60477 end elseif jd>31282 then if jd>31388 then F=ba[484];vf[ba[61316]][F]=vf[ba[7754]]hc+=1 jd=ab[5889]or Rb(5889,35630,38063)else if not(lg>10)then jd=ab[-5639]or Rb(-5639,52057,22148)break else jd=ab[-3085]or Rb(-3085,123099,50315)break end jd=ab[26216]or Rb(26216,63119,36558)end elseif jd<=31210 then A,ph=Bd[484],ba[484];ph='\154\17jCJ'..ph Fi=''Ie,vb,Pd=72,1,(#A-1)+72 jd=ab[-27958]or Rb(-27958,5557,9419)elseif jd>31252 then vf[F+2]=vf[F+3]hc+=ba[14430]jd=ab[9532]or Rb(9532,22332,10425)else Ie=A;if ph~=ph then jd=ab[-12648]or Rb(-12648,8702,29183)else jd=ab[-21781]or Rb(-21781,99286,62450)end end elseif jd>32410 then if lg>248 then jd=ab[-2991]or Rb(-2991,30504,3625)break else jd=ab[3361]or Rb(3361,60086,26915)break end jd=ab[-7950]or Rb(-7950,44623,62990)elseif jd<=32154 then if jd<=32130 then F,Bd,dc=ba[484],ba[28499],vf[ba[43096]];if(dc==F)~=Bd then jd=ab[-29708]or Rb(-29708,82660,39194)break else jd=ab[-12486]or Rb(-12486,84254,64138)break end jd=ab[-19419]or Rb(-19419,8342,28871)else if true then jd=37378 else jd=ab[-32160]or Rb(-32160,87131,17012)end end elseif jd>32185 then Pd=ph;if Fi~=Fi then jd=ab[-7106]or Rb(-7106,56738,9784)else jd=ab[20889]or Rb(20889,46366,25871)end else Pd=cb(Fi);if not(Pd==nil)then jd=ab[28028]or Rb(28028,57326,8519)break else jd=ab[10548]or Rb(10548,52759,7155)break end jd=ab[-27507]or Rb(-27507,95812,35305)end elseif jd<=27109 then if jd<=26269 then if jd>25726 then uh[ba]=nil hc+=1 jd=ab[-4117]or Rb(-4117,83379,56610)else hc+=ba[14430]jd=ab[-19760]or Rb(-19760,42039,64934)end elseif jd<=26781 then if jd>26657 then F,Bd,dc=be(ba[43096],19),be(ba[61316],147),be(ba[7754],122);A,ph=Bd==0 and ob-F or Bd-1,vf[F];Fi=Ff(ph(Ye(vf,F+1,F+A)));Ie=Fi[55606];if dc==0 then jd=ab[12662]or Rb(12662,57317,8291)break else jd=ab[-21643]or Rb(-21643,33995,47319)break end jd=44877 else A=Bd-1 jd=ab[17397]or Rb(17397,7460,630)end else A=Ie jd=ab[29456]or Rb(29456,98775,49525)break end elseif jd<=27910 then if jd>27473 then if jd>27729 then vf[ba[43096]]=nil jd=ab[-20816]or Rb(-20816,62330,33659)else if Fi==-2 then jd=ab[3727]or Rb(3727,61391,26755)break else jd=ab[4398]or Rb(4398,9374,2670)break end jd=ab[17006]or Rb(17006,82197,53568)end elseif jd<=27298 then F=bi[ba[7754]+1];vf[ba[43096]]=F[2][F[3]]jd=ab[-13871]or Rb(-13871,35034,59547)elseif jd<=27379 then if jd>27341 then F,Bd,dc=ba[47114],Ne[hc+1],nil;jd=31154;else hc-=1 Ne[hc]={[22086]=8,[43096]=be(ba[43096],124),[7754]=be(ba[7754],73),[61316]=0}jd=ab[29317]or Rb(29317,45852,50009)end else if lg>243 then jd=ab[-4607]or Rb(-4607,43549,24579)break else jd=ab[-19609]or Rb(-19609,98396,51042)break end jd=ab[-25031]or Rb(-25031,30296,3589)end elseif jd>28380 then if jd>28642 then vf[ba[7754]]=Ri(ba[19639])hc+=1 jd=ab[-6966]or Rb(-6966,23401,15188)else hc-=1 Ne[hc]={[22086]=85,[43096]=be(ba[43096],83),[7754]=be(ba[7754],122),[61316]=0}jd=ab[-21364]or Rb(-21364,50787,24146)end elseif jd<=28166 then if not F then jd=ab[-23421]or Rb(-23421,91298,115)break end jd=ab[30334]or Rb(30334,75306,34757)else ph,Fi=zg(uh[ba],dc,vf[F+1],vf[F+2]);if not ph then jd=ab[16302]or Rb(16302,97759,43949)break end jd=ab[-7671]or Rb(-7671,56952,1547)end elseif jd<=20887 then if jd<=18592 then if jd>17776 then if jd<=18426 then Fi=Fi+Pd;vb=Fi;if Fi~=Fi then jd=ab[-22849]or Rb(-22849,35566,7194)else jd=ab[8092]or Rb(8092,14780,31459)end else if not dc then jd=ab[5558]or Rb(5558,96699,34133)break end jd=56465 end elseif jd>17101 then if jd<=17196 then Oc=Ie;if Pd~=Pd then jd=ab[-32395]or Rb(-32395,67597,30817)else jd=ab[-11849]or Rb(-11849,75277,21212)end else if not(La==1)then jd=ab[20762]or Rb(20762,90364,31086)break else jd=ab[-12181]or Rb(-12181,37892,10206)break end jd=ab[-5679]or Rb(-5679,43205,60709)end elseif jd>17015 then Mc(Fi,1,Bd,F+3,vf)vf[F+2]=vf[F+3]hc+=ba[14430]jd=ab[2299]or Rb(2299,14418,22531)else if lg>72 then jd=ab[-2868]or Rb(-2868,56328,10775)break else jd=ab[-16620]or Rb(-16620,122748,64019)break end jd=ab[-26406]or Rb(-26406,25166,12815)end elseif jd<=19585 then if jd<=19276 then hc+=ba[14430]jd=ab[-27747]or Rb(-27747,57145,41124)elseif jd<=19550 then if jd>19522 then ed=false hc+=1 if lg>127 then jd=ab[244]or Rb(244,89825,21679)break else jd=ab[-16417]or Rb(-16417,86419,29505)break end jd=ab[-8384]or Rb(-8384,48450,50547)else A=dg(ph)=='function'jd=30625 break end else if true then jd=18570 else jd=ab[-10681]or Rb(-10681,37666,29872)end end elseif jd<=19915 then if not(vf[ba[43096]]<vf[ba[19639]])then jd=ab[1410]or Rb(1410,98416,57117)break else jd=ab[13736]or Rb(13736,63902,10315)break end jd=ab[32053]or Rb(32053,404,4545)elseif jd>20131 then vf[ba[43096]]=vf[ba[7754]]jd=ab[9219]or Rb(9219,18458,10331)else ph=ph..Va(be(_g(dc,(vb-224)+1),_g(A,(vb-224)%#A+1)))jd=ab[24605]or Rb(24605,52105,28277)end elseif jd>23078 then if jd<=24031 then if jd<=23579 then if vf[ba[43096]]==vf[ba[19639]]then jd=ab[32383]or Rb(32383,75701,21147)break else jd=ab[-26596]or Rb(-26596,85361,34640)break end jd=ab[1408]or Rb(1408,35401,60020)elseif jd>23849 then if jd<=23879 then F,Bd,dc=ba[484],ba[28499],vf[ba[43096]];if not((dc==F)~=Bd)then jd=ab[21194]or Rb(21194,66081,31483)break else jd=ab[-4048]or Rb(-4048,63605,701)break end jd=ab[13903]or Rb(13903,35110,60055)else if not(lg>222)then jd=ab[2901]or Rb(2901,98534,64262)break else jd=ab[-21924]or Rb(-21924,74047,42506)break end jd=ab[13552]or Rb(13552,3953,5996)end else if lg>37 then jd=ab[1562]or Rb(1562,98209,5325)break else jd=ab[-1690]or Rb(-1690,28832,10203)break end jd=ab[25435]or Rb(25435,18802,10595)end elseif jd<=24455 then if jd>24277 then if jd>24433 then if lg>184 then jd=ab[-30016]or Rb(-30016,89626,37047)break else jd=ab[15347]or Rb(15347,33814,40728)break end jd=ab[-13646]or Rb(-13646,37055,57406)else if true then jd=57700 else jd=49067 end end else hc+=ba[14430]jd=ab[-22466]or Rb(-22466,27074,2547)end else F=nil;jd=43580;end elseif jd<=22170 then if jd<=21749 then hc+=ba[14430]jd=ab[1740]or Rb(1740,16323,18418)elseif jd<=21999 then if lg>139 then jd=ab[-28327]or Rb(-28327,89482,60099)break else jd=ab[25942]or Rb(25942,6123,28650)break end jd=ab[17297]or Rb(17297,27339,2698)else if lg>36 then jd=ab[-2875]or Rb(-2875,51120,30952)break else jd=ab[6513]or Rb(6513,65390,16618)break end jd=ab[-32237]or Rb(-32237,34997,59424)end elseif jd>22616 then if jd<=22816 then if jd>22728 then if true then jd=ab[30351]or Rb(30351,72536,50686)else jd=7809 end elseif jd<=22688 then xe''jd=ab[-22538]or Rb(-22538,91067,48786)else if lg>55 then jd=ab[-31355]or Rb(-31355,43196,44750)break else jd=ab[7294]or Rb(7294,90359,41705)break end jd=ab[4531]or Rb(4531,58067,45698)end elseif jd>22897 then if jd<=22966 then ph,Fi=Bd[30185],ba[30185];Fi='\154\17jCJ'..Fi Ie=''Pd,Oc,vb=17,1,(#ph-1)+17 jd=ab[-18147]or Rb(-18147,123088,39884)else if lg>134 then jd=ab[-13104]or Rb(-13104,37244,43966)break else jd=ab[-22027]or Rb(-22027,47063,12547)break end jd=ab[-27189]or Rb(-27189,59625,35028)end else vf[ba[61316]][vf[ba[7754]]]=vf[ba[43096]]jd=ab[3478]or Rb(3478,12271,30702)end elseif jd<=22318 then Bd,dc,A=wg(Bd)jd=ab[-4350]or Rb(-4350,31680,4980)elseif jd>22368 then if jd<=22381 then if not ed then jd=ab[13684]or Rb(13684,115522,57630)break end jd=ab[-307]or Rb(-307,5802,11786)else Fi=cb(A);if not(Fi==nil)then jd=ab[-30228]or Rb(-30228,45008,29378)break else jd=ab[31949]or Rb(31949,74837,57906)break end jd=36711 end else jd=ab[-6675]or Rb(-6675,34360,45756);break;end elseif jd>49258 then if jd<=57397 then if jd>53311 then if jd>55371 then if jd<=56434 then if jd>55938 then if jd<=56252 then vf[ba[43096]]=vf[ba[61316]][ba[7754]+1]jd=ab[21167]or Rb(21167,834,4979)elseif jd>56341 then ph=dc;jd=19516;else F[484]=Bd ba[22086]=2 jd=ab[-29775]or Rb(-29775,21999,11758)end elseif jd<=55619 then if lg>238 then jd=ab[20859]or Rb(20859,52163,9827)break else jd=ab[14301]or Rb(14301,119487,36658)break end jd=ab[16246]or Rb(16246,22040,11845)elseif jd<=55711 then if lg>43 then jd=ab[25723]or Rb(25723,97475,51305)break else jd=ab[8546]or Rb(8546,33088,16917)break end jd=ab[-21403]or Rb(-21403,85797,53392)else Bd[28580]=ph jd=ab[13896]or Rb(13896,59898,10168)end elseif jd<=56907 then if jd>56485 then Bd[30185]=A ph=nil jd=9314 else A,ph=vf[F+1],nil;jd=55155;end elseif jd>57324 then La=Pd;if vb~=vb then jd=ab[12549]or Rb(12549,44028,65080)else jd=41898 end else hc+=1 jd=ab[3388]or Rb(3388,39765,64256)end elseif jd>54298 then if jd>54812 then if jd<=55052 then if jd<=54930 then Ie=dg(Pd)=='number'jd=ab[31264]or Rb(31264,11976,30313)break else if lg>130 then jd=ab[-27953]or Rb(-27953,42640,19894)break else jd=ab[134]or Rb(134,53864,28682)break end jd=ab[-11949]or Rb(-11949,29492,3233)end elseif jd>55179 then F,Bd=ba[43096],ba[484];ob=F+6 dc,A=vf[F],nil jd=ab[-18395]or Rb(-18395,105756,54621)else Fi=A;jd=43364;end elseif jd<=54566 then if lg>102 then jd=ab[18270]or Rb(18270,45883,44910)break else jd=ab[-26979]or Rb(-26979,85316,56412)break end jd=ab[-5159]or Rb(-5159,59929,35396)else if La==2 then jd=ab[22143]or Rb(22143,119273,60906)break end jd=ab[-17835]or Rb(-17835,65266,47888)end elseif jd>53701 then if jd<=53942 then if lg>28 then jd=ab[14827]or Rb(14827,44643,9446)break else jd=ab[-6705]or Rb(-6705,87347,48325)break end jd=ab[-27485]or Rb(-27485,22649,14436)else hc+=ba[14430]jd=ab[-18602]or Rb(-18602,54304,44445)end elseif jd>53446 then Fi=Fi..Va(be(_g(A,(Oc-72)+1),_g(ph,(Oc-72)%#ph+1)))jd=ab[-13655]or Rb(-13655,44626,25043)elseif jd>53395 then Bd=vf[ba[43096]];jd=39365;else if ba[61316]==138 then jd=ab[16835]or Rb(16835,72561,39317)break else jd=ab[25839]or Rb(25839,86217,32789)break end jd=ab[6521]or Rb(6521,5642,28235)end elseif jd<=51280 then if jd<=50177 then if jd<=49640 then if jd>49363 then dc=dg(A)=='number'jd=ab[23575]or Rb(23575,11701,2368)break else Bd,dc,A=uh;if Td(Bd)~='function'then jd=ab[-22510]or Rb(-22510,58809,48077)break end;jd=ab[8208]or Rb(8208,120540,53433);end else Pd=Ne[hc];hc+=1 vb=Pd[43096]if vb==0 then jd=ab[17448]or Rb(17448,2860,1392)break elseif vb==2 then jd=ab[-22901]or Rb(-22901,86493,62612)break end jd=ab[21996]or Rb(21996,94771,37783)end elseif jd>50930 then if jd>51014 then F,Bd=Ne[hc],nil;jd=50829;else vf[ba[43096]]=not vf[ba[7754]]jd=ab[31378]or Rb(31378,49283,20530)end elseif jd>50811 then if jd<=50836 then if jd>50830 then hd=Oc[7754];De=Ga[hd];if not(De==nil)then jd=ab[9113]or Rb(9113,121360,33032)break else jd=ab[-6730]or Rb(-6730,85327,19740)break end jd=62189 else dc,A=F[484],ba[484];A='\154\17jCJ'..A ph=''Fi,Pd,Ie=224,1,(#dc-1)+224 jd=46073 end else hd={[1]=vf[Oc[7754]],[3]=1};hd[2]=hd ph[(vb-190)]=hd jd=ab[-31873]or Rb(-31873,86625,49281)end else vf[ba[43096]]=dc jd=ab[-30883]or Rb(-30883,89704,52329)end elseif jd>52556 then if jd>52960 then if jd>53160 then if jd<=53241 then if(Pd>=0 and Fi>Ie)or((Pd<0 or Pd~=Pd)and Fi<Ie)then jd=ab[27250]or Rb(27250,4621,25160)else jd=46942 end elseif jd>53268 then ph[(vb-190)]=bi[Oc[7754]+1]jd=ab[11850]or Rb(11850,14447,32403)else F,Bd,dc=ba[61316],ba[43096],ba[484];A=vf[Bd];vf[F+1]=A vf[F]=A[dc]hc+=1 jd=ab[-30104]or Rb(-30104,45490,49443)end else if lg>166 then jd=ab[-18840]or Rb(-18840,69957,49352)break else jd=ab[-22107]or Rb(-22107,34655,13010)break end jd=ab[24821]or Rb(24821,18960,10829)end else if not(Bd<=A)then jd=ab[-28034]or Rb(-28034,18509,10248)break else jd=ab[17077]or Rb(17077,51057,14135)break end jd=ab[-72]or Rb(-72,47802,55867)end elseif jd<=52083 then if jd<=51904 then if jd>51828 then A=vf[F]ph,Ie,Fi=F+1,1,Bd jd=32187 else hc-=1 Ne[hc]={[22086]=71,[43096]=be(ba[43096],33),[7754]=be(ba[7754],121),[61316]=0}jd=ab[-21505]or Rb(-21505,40994,61843)end else vf[ba[43096]]=ba[484]jd=ab[6526]or Rb(6526,23949,9672)end elseif jd>52219 then if jd<=52340 then vf[ba[43096]]=dc[ba[30185]][ba[28580]]jd=ab[7397]or Rb(7397,29376,10481)else Ie=Ie..Va(be(_g(ph,(La-104)+1),_g(Fi,(La-104)%#Fi+1)))jd=ab[30958]or Rb(30958,54140,43485)end else if true then jd=ab[7531]or Rb(7531,31562,13452)else jd=55155 end end elseif jd>61610 then if jd<=63570 then if jd<=62591 then if jd<=62078 then if jd<=61821 then if jd>61677 then if lg>228 then jd=ab[-20800]or Rb(-20800,40519,59937)break else jd=ab[-26559]or Rb(-26559,31668,9724)break end jd=ab[-29316]or Rb(-29316,35129,60068)else if(Oc>=0 and Pd>vb)or((Oc<0 or Oc~=Oc)and Pd<vb)then jd=ab[19866]or Rb(19866,50579,12806)else jd=ab[11989]or Rb(11989,80460,41220)end end elseif jd>62013 then F=ba[484];vf[ba[61316]]=vf[ba[43096]][F]hc+=1 jd=ab[-10389]or Rb(-10389,48388,50865)else Bd,dc,A=wg(Bd)jd=ab[-21276]or Rb(-21276,33969,25903)end elseif jd<=62362 then if jd>62239 then if jd>62274 then hc+=1 jd=ab[25594]or Rb(25594,43834,62651)else if lg>98 then jd=ab[20115]or Rb(20115,47401,21111)break else jd=ab[-838]or Rb(-838,53641,41056)break end jd=ab[-20858]or Rb(-20858,40850,59331)end elseif jd<=62213 then ph[(vb-190)]=De jd=ab[29561]or Rb(29561,82867,61527)else Ie=Ie..Va(be(_g(ph,(La-17)+1),_g(Fi,(La-17)%#Fi+1)))jd=ab[8330]or Rb(8330,77289,59259)end else vf[ba[61316]]=vf[ba[43096]]*vf[ba[7754]]jd=ab[-27504]or Rb(-27504,18768,10509)end elseif jd>63214 then if jd<=63409 then if jd<=63305 then vf[ba[43096]]=dc[ba[30185]]jd=ab[-17107]or Rb(-17107,41399,40762)elseif jd>63345 then if not(lg>207)then jd=ab[17938]or Rb(17938,12601,5158)break else jd=ab[8439]or Rb(8439,88263,45972)break end jd=ab[-17615]or Rb(-17615,43847,52086)else La=Pd;if vb~=vb then jd=ab[-14543]or Rb(-14543,34077,29596)else jd=ab[-32590]or Rb(-32590,78665,43262)end end else xe''jd=ab[-26715]or Rb(-26715,81383,60672)end else if true then jd=56324 else jd=50829 end end elseif jd>64630 then if jd<=65089 then if jd<=64674 then if true then jd=58259 else jd=ab[2082]or Rb(2082,65746,23575)end else F,Bd=ba[43096],ba[7754];dc=Bd-1;if dc==-1 then jd=ab[-30023]or Rb(-30023,125053,58322)break else jd=ab[-16602]or Rb(-16602,93704,59928)break end jd=12487 end else hc+=ba[14430]jd=ab[17371]or Rb(17371,13502,19519)end elseif jd>64154 then if jd>64522 then F=nil;jd=7809;elseif jd>64495 then dc=Fi jd=48144 break else hc-=1 Ne[hc]={[22086]=128,[43096]=be(ba[43096],245),[7754]=be(ba[7754],102),[61316]=0}jd=ab[28025]or Rb(28025,85941,55072)end elseif jd<=63944 then if jd<=63824 then if lg>40 then jd=ab[8153]or Rb(8153,58805,15955)break else jd=ab[13764]or Rb(13764,70670,55582)break end jd=ab[8398]or Rb(8398,85613,54888)else dc=Ne[hc+ba[14430]];if not(uh[dc]==nil)then jd=ab[23011]or Rb(23011,55802,15589)break else jd=ab[24348]or Rb(24348,41191,18668)break end jd=ab[-31276]or Rb(-31276,62671,1928)end else if A<=Bd then jd=ab[-24266]or Rb(-24266,81517,21015)break end jd=ab[-4747]or Rb(-4747,57306,42907)end elseif jd<=59647 then if jd>58527 then if jd<=59030 then F=ba[43096];Bd,dc=vf[F],nil;jd=29703;elseif jd>59215 then if jd>59320 then if not(ba[61316]==194)then jd=ab[29350]or Rb(29350,20437,9027)break else jd=ab[6832]or Rb(6832,44780,13335)break end jd=ab[-13913]or Rb(-13913,779,4938)else if(vb>=0 and Ie>Pd)or((vb<0 or vb~=vb)and Ie<Pd)then jd=ab[-2334]or Rb(-2334,117543,47951)else jd=53500 end end elseif jd>59093 then if not(lg>121)then jd=ab[5379]or Rb(5379,78329,36242)break else jd=ab[23741]or Rb(23741,12839,10193)break end jd=ab[-2200]or Rb(-2200,53554,41635)elseif jd<=59076 then A=ob-F+1 jd=ab[-1264]or Rb(-1264,36696,48378)else hc+=1 jd=ab[-20880]or Rb(-20880,35684,60241)end elseif jd>58052 then if jd>58251 then if jd>58332 then if jd>58401 then Fi,Ie=vf[F+2],nil;jd=ab[30226]or Rb(30226,86643,41775);else vf[F]=A Bd=A jd=ab[24448]or Rb(24448,88066,27098)end else if not(not F)then jd=ab[-4724]or Rb(-4724,40515,18790)break else jd=ab[13959]or Rb(13959,82923,57891)break end jd=ab[-20926]or Rb(-20926,51993,15944)end else hc+=ba[14430]jd=ab[-14060]or Rb(-14060,55568,47437)end else if not(not Bd)then jd=ab[-25943]or Rb(-25943,65211,6436)break else jd=ab[19852]or Rb(19852,102465,63223)break end jd=34604 end elseif jd>60651 then if jd<=61227 then vf[ba[61316]]=vf[ba[7754]]*ba[484]jd=ab[4210]or Rb(4210,13589,19776)elseif jd>61522 then if not(lg>1)then jd=ab[-7392]or Rb(-7392,16196,32098)break else jd=ab[-14338]or Rb(-14338,37391,57934)break end jd=ab[-3776]or Rb(-3776,1995,8074)else F=if Bd<32768 then Bd else Bd-65536 jd=ab[-22636]or Rb(-22636,42097,63274)break end elseif jd<=60093 then if jd>59768 then if ba[61316]==9 then jd=ab[-15556]or Rb(-15556,7508,1219)break elseif not(ba[61316]==29)then jd=ab[18698]or Rb(18698,115219,40936)break else jd=ab[1303]or Rb(1303,59630,22783)break end jd=ab[2860]or Rb(2860,82967,56390)else if not(ba[61316]==132)then jd=ab[-20255]or Rb(-20255,88245,7408)break else jd=ab[-27630]or Rb(-27630,42416,22922)break end jd=ab[-28226]or Rb(-28226,85059,54386)end else if(Fi>=0 and A>ph)or((Fi<0 or Fi~=Fi)and A<ph)then jd=ab[-29917]or Rb(-29917,36653,37032)else jd=ab[-19927]or Rb(-19927,78566,39204)end end elseif jd<=41031 then if jd<=36845 then if jd>34853 then if jd<=35977 then vb=Fi;if Ie~=Ie then jd=ab[-31639]or Rb(-31639,82696,56501)else jd=53194 end elseif jd>36359 then if jd<=36628 then if jd<=36574 then vf[F+2]=Pd Fi=Pd jd=ab[-23087]or Rb(-23087,77046,53144)elseif jd>36591 then Bd,dc,A=F.__iter(Bd)jd=ab[-890]or Rb(-890,62116,13361)else hc+=ba[14430]jd=ab[-21181]or Rb(-21181,13399,19462)end else vf[F+1]=Fi A=Fi jd=ab[-29170]or Rb(-29170,92621,24963)end elseif jd<=36156 then if jd<=36075 then hd=vb;if Oc~=Oc then jd=ab[1716]or Rb(1716,85207,56106)else jd=ab[1383]or Rb(1383,117387,63573)end elseif jd>36111 then li(Fi)uh[ph]=nil jd=ab[-13530]or Rb(-13530,45466,19451)elseif jd>36095 then vf[ba[43096]]=A jd=ab[2385]or Rb(2385,24654,12303)else Pd=Fi;jd=54901;end elseif jd<=36262 then if jd>36238 then if jd>36254 then ph={dc(vf[F+1],vf[F+2])};Mc(ph,1,Bd,F+3,vf)if vf[F+3]~=nil then jd=ab[-1344]or Rb(-1344,61939,6139)break else jd=ab[-17066]or Rb(-17066,56457,11957)break end jd=ab[18837]or Rb(18837,30723,6578)else ob=F+Ie-1 jd=ab[1215]or Rb(1215,69491,45645)end else if vf[ba[43096]]<=vf[ba[19639]]then jd=ab[-8078]or Rb(-8078,45962,16284)break else jd=ab[-17934]or Rb(-17934,72468,58907)break end jd=ab[-561]or Rb(-561,51177,24532)end else if not(lg>146)then jd=ab[-26261]or Rb(-26261,60486,9592)break else jd=ab[27320]or Rb(27320,84266,48091)break end jd=ab[8884]or Rb(8884,45199,49358)end elseif jd<=33819 then if jd>33200 then vf[ba[7754]]=vf[ba[61316]]+ba[484]jd=ab[-24402]or Rb(-24402,53052,20665)elseif jd<=32998 then if lg>94 then jd=ab[26293]or Rb(26293,35935,34493)break else jd=ab[-21612]or Rb(-21612,14829,25415)break end jd=ab[-3525]or Rb(-3525,44886,63239)else if not(lg>149)then jd=ab[-14365]or Rb(-14365,60754,14313)break else jd=ab[2542]or Rb(2542,59897,4792)break end jd=ab[-32461]or Rb(-32461,21186,8947)end elseif jd>34233 then if jd>34603 then if jd>34623 then hc+=1 jd=ab[22545]or Rb(22545,54860,44553)else hc+=ba[14430]jd=ab[1698]or Rb(1698,38059,60458)end elseif jd<=34565 then if A>0 then jd=ab[-420]or Rb(-420,58987,16635)break else jd=ab[-6647]or Rb(-6647,36303,13848)break end jd=ab[24700]or Rb(24700,22205,11832)else if not(lg>218)then jd=ab[7815]or Rb(7815,42065,62435)break else jd=ab[32308]or Rb(32308,69144,32699)break end jd=ab[5639]or Rb(5639,60403,35810)end elseif jd>33910 then F,Bd=vf[ba[43096]],nil;jd=49067;else A=(function(...)for g,_e,cc,td,Pa,gc,Vg,Nf,qc,jb,jf,sd,ef,Qh,a_,Ua,Se,hi,Pe,r_,xg,Oa,xa,Vb,ki,ya,Ce,I,Ob,se_,cg,Si,sc,gd,Ki,Gh,Wf,Bh,mb,gh,Zb,ja,Sh,bd,ce,ff,jg,na,Ib,Kg,Xg,D,lb,ih,le,ne,zi,af,lc,Ka,Tb,pf,i_,Oe,fg,ac,ie,Dd,Fb,fd,re_,m,Tc,Ub,hh,ze,od,fc,Sa,Ji,Dg,uc,Hd,ua,zc,Hc,Jd,ri,Fd,Th,zd,Gc,ge,tb,Wh,eg,Oi,xh,we,e_,Da,Jb,yd,_b,og,Mi,E,Aa,Cc,If,Ya,Ue,Ea,ad,Xa,si,Li,Ng,ii,qi,Fc,Ai,sb,T,ai,f_,Vd,Uc,qa,Pb,Hi,Te,ec,Eg,sa,mh,fe,kh,rd,Ph,Yg,nc,nf,qd,Fa,va,yi,d_,Qb,bb,Yf,za,aa,Ca,Xh,Jc,Sg,ma,mg,Yh,Dh,gf,ic,vd,Mb,h,qb,oi,Df,ag,Me,Og,ug,Ef,cd,Ti,vc,z,Nb,Jf in...do Sc{g,_e,cc,td,Pa,gc,Vg,Nf,qc,jb,jf,sd,ef,Qh,a_,Ua,Se,hi,Pe,r_,xg,Oa,xa,Vb,ki,ya,Ce,I,Ob,se_,cg,Si,sc,gd,Ki,Gh,Wf,Bh,mb,gh,Zb,ja,Sh,bd,ce,ff,jg,na,Ib,Kg,Xg,D,lb,ih,le,ne,zi,af,lc,Ka,Tb,pf,i_,Oe,fg,ac,ie,Dd,Fb,fd,re_,m,Tc,Ub,hh,ze,od,fc,Sa,Ji,Dg,uc,Hd,ua,zc,Hc,Jd,ri,Fd,Th,zd,Gc,ge,tb,Wh,eg,Oi,xh,we,e_,Da,Jb,yd,_b,og,Mi,E,Aa,Cc,If,Ya,Ue,Ea,ad,Xa,si,Li,Ng,ii,qi,Fc,Ai,sb,T,ai,f_,Vd,Uc,qa,Pb,Hi,Te,ec,Eg,sa,mh,fe,kh,rd,Ph,Yg,nc,nf,qd,Fa,va,yi,d_,Qb,bb,Yf,za,aa,Ca,Xh,Jc,Sg,ma,mg,Yh,Dh,gf,ic,vd,Mb,h,qb,oi,Df,ag,Me,Og,ug,Ef,cd,Ti,vc,z,Nb,Jf}end;Sc(-2)end);uh[dc]=wf(A)jd=ab[-15703]or Rb(-15703,45082,23365)end elseif jd>38842 then if jd>40030 then if jd>40469 then if jd>40598 then if jd>40648 then if jd<=40681 then Ie=Ie+vb;Oc=Ie;if Ie~=Ie then jd=ab[7093]or Rb(7093,92880,6822)else jd=ab[-7740]or Rb(-7740,119978,32959)end elseif jd<=40689 then ob,hc,Ga,uh,ed=-1,1,md({},{__mode='vs'}),md({},{__mode='ks'}),false;jd=ab[-27567]or Rb(-27567,12357,16496);else F=ci(Bd)if F~=nil and F.__iter~=nil then jd=ab[14705]or Rb(14705,63940,14437)break elseif Td(Bd)=='table'then jd=ab[-6522]or Rb(-6522,61197,31349)break end jd=ab[-19138]or Rb(-19138,57412,35208)end else Pd=Pd+Oc;La=Pd;if Pd~=Pd then jd=ab[7439]or Rb(7439,74844,53597)else jd=ab[-12605]or Rb(-12605,71997,17954)end end elseif jd>40505 then if not(lg>232)then jd=ab[12416]or Rb(12416,45447,57534)break else jd=ab[-9424]or Rb(-9424,11623,24660)break end jd=ab[2238]or Rb(2238,23908,9553)else if ba[61316]==73 then jd=ab[21069]or Rb(21069,49928,12836)break elseif not(ba[61316]==115)then jd=ab[20980]or Rb(20980,25907,9475)break else jd=ab[26584]or Rb(26584,38109,3917)break end jd=ab[6456]or Rb(6456,25423,13070)end else F,Bd=ba[47114],ba[484];dc=ch[Bd]or ld[33043][Bd];if not(F==1)then jd=ab[-29632]or Rb(-29632,36036,32160)break else jd=ab[17573]or Rb(17573,116122,38676)break end jd=ab[-8554]or Rb(-8554,62938,43935)end elseif jd>39498 then if lg>101 then jd=ab[999]or Rb(999,61671,40517)break else jd=ab[6608]or Rb(6608,1661,7839)break end jd=ab[-16414]or Rb(-16414,46143,52670)elseif jd<=39392 then if jd<=39377 then if jd>39368 then if not(vf[ba[43096]])then jd=ab[5179]or Rb(5179,59920,35405)break else jd=ab[-4553]or Rb(-4553,71116,17585)break end jd=ab[-15279]or Rb(-15279,37383,58294)else F=dg(Bd)=='function'jd=58259 break end else if lg>190 then jd=ab[-25129]or Rb(-25129,83492,35064)break else jd=ab[31023]or Rb(31023,46946,29129)break end jd=ab[5110]or Rb(5110,61002,46603)end else xe''jd=ab[32582]or Rb(32582,58520,16154)end elseif jd<=37757 then if jd>37253 then if jd<=37415 then if jd>37345 then Bd=F;dc=hf[Bd+1];A=dc[3775];ph=Ri(A);vf[be(ba[43096],70)]=bh(dc,ph)Pd,Fi,Ie=1,191,(A)+190 jd=ab[-12880]or Rb(-12880,42343,29655)else hc-=1 Ne[hc]={[22086]=55,[43096]=be(ba[43096],118),[7754]=be(ba[7754],148),[61316]=0}jd=ab[1901]or Rb(1901,61250,46963)end else A..=vf[Pd]jd=ab[-31568]or Rb(-31568,128586,54089)end else A=cb(Bd);if not(A==nil)then jd=ab[-6041]or Rb(-6041,47420,12981)break else jd=ab[-14981]or Rb(-14981,3330,13636)break end jd=ab[-6037]or Rb(-6037,67402,30471)end elseif jd>38375 then if jd>38467 then Bd=ph jd=ab[-12101]or Rb(-12101,70522,21277)break else ph,Fi=Bd(dc,A);A=ph;if A==nil then jd=22355 else jd=36143 end end elseif jd>38280 then if jd>38325 then if lg>159 then jd=ab[-15050]or Rb(-15050,59143,41143)break else jd=ab[17481]or Rb(17481,55395,41720)break end jd=ab[31060]or Rb(31060,8624,28973)else hc+=1 jd=ab[-377]or Rb(-377,30368,3613)end elseif jd>38232 then hc+=ba[14430]jd=ab[4699]or Rb(4699,8108,26409)else vf[ba[43096]]=vf[ba[61316]]-ba[484]jd=ab[2882]or Rb(2882,33010,37091)end elseif jd>45257 then if jd<=47570 then if jd<=46768 then if jd>46265 then if jd>46393 then if jd>46427 then F=if Bd<32768 then Bd else Bd-65536 jd=37378 break else Bd,dc,A=Ga;if Td(Bd)~='function'then jd=ab[-9752]or Rb(-9752,40725,38205)break end;jd=ab[3672]or Rb(3672,67802,61830);end else if not(lg>67)then jd=ab[8996]or Rb(8996,94892,27780)break else jd=ab[-9177]or Rb(-9177,124598,54249)break end jd=ab[-30832]or Rb(-30832,3886,4271)end elseif jd>46138 then hc+=ba[14430]jd=ab[-28687]or Rb(-28687,5840,28301)else vb=Fi;if Ie~=Ie then jd=ab[19926]or Rb(19926,40595,26749)else jd=11508 end end elseif jd<=47203 then if jd<=47052 then Oc=Ne[hc];hc+=1 La=Oc[43096]if not(La==0)then jd=ab[1625]or Rb(1625,92529,49222)break else jd=ab[-11049]or Rb(-11049,89246,32361)break end jd=ab[-829]or Rb(-829,49519,30611)else if not(lg>16)then jd=ab[-32731]or Rb(-32731,42709,8474)break else jd=ab[-4199]or Rb(-4199,122867,34013)break end jd=ab[-4152]or Rb(-4152,11481,29828)end else ph=ph+Ie;Pd=ph;if ph~=ph then jd=ab[-10426]or Rb(-10426,59313,14537)else jd=ab[9515]or Rb(9515,36358,3687)end end elseif jd<=48319 then if jd>47894 then if jd<=48139 then hc+=1 jd=ab[-4779]or Rb(-4779,52237,21576)elseif jd<=48180 then Bd[484]=dc if F==2 then jd=ab[-9451]or Rb(-9451,53271,30658)break elseif F==3 then jd=ab[-24911]or Rb(-24911,34416,34101)break end jd=41447 else if true then jd=ab[-22574]or Rb(-22574,83900,2216)else jd=ab[-26615]or Rb(-26615,13317,12849)end end elseif jd>47664 then if jd<=47745 then Bd[30185]=A jd=ab[-18938]or Rb(-18938,33996,2382)else if(La>=0 and vb>Oc)or((La<0 or La~=La)and vb<Oc)then jd=ab[-5262]or Rb(-5262,65438,46691)else jd=48379 end end elseif jd>47606 then if jd>47635 then xe(Fi)jd=ab[4236]or Rb(4236,55412,6263)else ba=Ne[hc]lg=ba[22086]jd=ab[-19468]or Rb(-19468,56960,26140)end else F=hf[ba[484]+1];Bd=F[3775];dc=Ri(Bd);vf[ba[43096]]=bh(F,dc)Fi,ph,A=1,(Bd)+215,216 jd=31237 end elseif jd>48723 then if jd<=48938 then if not(lg>62)then jd=ab[4205]or Rb(4205,93375,29286)break else jd=ab[28990]or Rb(28990,42980,29866)break end jd=ab[21300]or Rb(21300,49061,50960)else dc=F;jd=11625;end elseif jd<=48423 then Pd=Pd..Va(be(_g(Fi,(hd-55)+1),_g(Ie,(hd-55)%#Ie+1)))jd=ab[-352]or Rb(-352,63237,34552)else if true then jd=ab[-3639]or Rb(-3639,47791,27188)else jd=ab[-4701]or Rb(-4701,14644,12073)end end elseif jd<=43247 then if jd<=42341 then if jd>41727 then if jd>41953 then if jd<=41993 then if(Ie>=0 and ph>Fi)or((Ie<0 or Ie~=Ie)and ph<Fi)then jd=ab[-8596]or Rb(-8596,64437,1229)else jd=ab[9074]or Rb(9074,70651,59653)end else De={[3]=hd,[2]=vf}Ga[hd]=De jd=ab[4282]or Rb(4282,99843,58749)end else if(Oc>=0 and Pd>vb)or((Oc<0 or Oc~=Oc)and Pd<vb)then jd=ab[-2466]or Rb(-2466,31118,3086)else jd=52343 end end elseif jd>41454 then vf[ba[43096]]={}jd=ab[9346]or Rb(9346,58658,48787)else ba[22086]=232 hc+=1 jd=ab[-24734]or Rb(-24734,41683,62082)end elseif jd>42791 then Bd=be(ba[35284],28046);jd=61450;elseif jd<=42536 then dc=ob-Bd+1 jd=ab[10760]or Rb(10760,34500,48435)else F=nil;jd=43235;end elseif jd<=44149 then if jd<=43605 then if jd<=43416 then if jd<=43315 then F=bi[ba[7754]+1];F[2][F[3]]=vf[ba[43096]]jd=ab[10124]or Rb(10124,61609,32788)elseif jd>43371 then hc-=1 Ne[hc]={[22086]=68,[43096]=be(ba[43096],54),[7754]=be(ba[7754],243),[61316]=0}jd=ab[-15302]or Rb(-15302,51473,43340)else ph=dg(Fi)=='number'jd=ab[-14880]or Rb(-14880,41286,57992)break end else Bd=be(ba[35284],62243);jd=46458;end else Bd,dc,A=F.__iter(Bd)jd=ab[-24516]or Rb(-24516,44962,51370)end elseif jd>44745 then if jd<=44925 then if jd>44840 then Mc(Fi[25879],1,Ie,F,vf)jd=ab[-14525]or Rb(-14525,62291,33538)else if ba[61316]==183 then jd=ab[-24565]or Rb(-24565,95932,46224)break elseif not(ba[61316]==213)then jd=ab[-26087]or Rb(-26087,82921,9054)break else jd=ab[17454]or Rb(17454,6158,25210)break end jd=ab[-19506]or Rb(-19506,49866,21131)end elseif jd>45025 then hc-=1 Ne[hc]={[22086]=78,[43096]=be(ba[43096],144),[7754]=be(ba[7754],245),[61316]=0}jd=ab[3514]or Rb(3514,1271,7398)else if not(lg>69)then jd=ab[-16892]or Rb(-16892,126674,57266)break else jd=ab[21005]or Rb(21005,85027,58342)break end jd=ab[28529]or Rb(28529,49662,20991)end else if not(not(Bd<=Fi))then jd=ab[6445]or Rb(6445,27143,2998)break else jd=ab[-18736]or Rb(-18736,87382,56337)break end jd=ab[-10682]or Rb(-10682,14773,22816)end end until jd==10017 end local Be Be=function(...)local U,Kc,Sd,Qg,q,Ic,v,sf,vh,K q,U={},function(dh,Ta,xd)q[dh]=Kd(Ta,30032)-Kd(xd,6888)return q[dh]end Qg=q[18483]or U(18483,34601,35504)repeat while true do if Qg<=31550 then if Qg<=16248 then if Qg>9925 then if Qg>12136 then if not(K==false)then Qg=q[25499]or U(25499,90551,58970)break else Qg=q[-29784]or U(-29784,79684,31012)break end Qg=q[4227]or U(4227,94584,61723)else Qg=q[11711]or U(11711,130293,46761);break;end else return xe(Ic,0)end elseif Qg<=22091 then Sd=Ff(Yc(j,v,Ha[12371],Ha[64256],vh));if not(Sd[25879][1])then Qg=q[-10087]or U(-10087,97699,46414)break else Qg=q[6408]or U(6408,84094,28574)break end Qg=10618 elseif Qg<=24580 then Ic,K=Sd[25879][2],nil;Qg=52521;elseif Qg<=25710 then Kc,v,vh=bg(...),Ri(Ha[1795]),{[25879]={},[55606]=0};Mc(Kc,1,Ha[50334],0,v)if Ha[50334]<Kc.n then Qg=q[14013]or U(14013,77074,60270)break end Qg=17883 else Sd,Ic=Ha[50334]+1,Kc.n-Ha[50334];vh[55606]=Ic;Mc(Kc,Sd,Sd+Ic-1,1,vh[25879])Qg=q[23537]or U(23537,35683,41648)end elseif Qg>45692 then if Qg<=52558 then if Qg<=50366 then K=dg(sf)=='string'Qg=13654 break elseif Qg<=51824 then return Ye(Sd[25879],2,Sd[55606])else sf=Ic;Qg=48212;end else Ic=dg(Ic)Qg=q[-23749]or U(-23749,91158,58361)end else if true then Qg=q[16640]or U(16640,5382,12776)else Qg=52521 end end end until Qg==56676 end return Be end return bh(Yd,We)end local p p,Qf={[0]=0},function()p[0]=p[0]+1 return{[3]=p[0],[2]=p}end yf=H return(function()local Zg,Od,oe,Lh Zg={[3]=1,[1]=yf};Zg[2]=Zg oe={[3]=1,[1]=Lb}oe[2]=oe Od={[3]=1,[1]=xf}Od[2]=Od Lh={[3]=1,[1]=Vc}Lh[2]=Lh return yf(Ld'',{[1]=Zg,[3]=Od,[2]=oe,[4]=Lh})end)()(...)